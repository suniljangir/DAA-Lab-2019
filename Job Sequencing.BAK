#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
#define MAX 50
typedef struct Job
{
char id[5];
int deadline;
int profit;
}
Job;
void jobSequencingWithDeadline(Job jobs[], int n);
int minValue(int a, int b)
{
return b;
}
void main()
{
int i, j;
Job jobs[5]={
{"j1",2,50},
{"j2",1,90},
{"j3",3,10},
{"j4",2,30},
{"j5",1,10},
};
Job temp;
int n=5;
for(i=1; i<n; i++)
{
for(j=0; j<n-i; j++)
{
if(jobs[j+1].profit>jobs[j].profit)
{
temp=jobs[j+1];
jobs[j+1]=jobs[j];
jobs[j]=temp;
}
}
}
printf("%10s%10s%10s\n", "Job", "Deadline", "Profit");
for(i=0; i<n; i++)
{
printf("%10s%10i%10i\n", jobs[i].id, jobs[i].deadline, jobs[i].profit);
}
jobSequencingWithDeadline(jobs, n);
}
void jobSequencingWithDeadline(Job jobs[], int n)
{
int i, j, k, maxProfit;
int timeslot[MAX];
int filledTimeSlot=0;
int dmax=0;
for(i=0; i<n; i++)
{
if(jobs[i].deadline>dmax)
{
dmax=jobs[i].deadline;
}
}
for(i=1; i<=dmax; i++)
{
timeslot[i]=-1;
}
printf("dmax:%d", dmax);
for(i=1; i<=n; i++){
k=minValue(dmax, jobs[i-1].deadline);
while(k>=1){
if(timeslot[k]==-1)
{
timeslot[k]=i-1;
filledTimeSlot++;
break;
}
k--;
}
if(filledTimeSlot==dmax){
break;
}
}
printf("\n Jobs Required:");
for(i=1; i<=dmax; i++)
{
printf("%s", jobs[timeslot[i]].id);
if(i<dmax)
{
printf("-->");
}
}
maxProfit=0;
for(i=1; i<=dmax; i++)
{
maxProfit+=jobs[timeslot[i]].profit;
}
printf("\n Maximum Profit is %d", maxProfit);
getch();
}